<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emarket.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.emarket.bean.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="question" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="answer" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Colunm_List">
    id, username, password, email, phone, question, answer, role, create_time, update_time
  </sql>
  <insert id="insert" parameterType="com.emarket.bean.User">
    insert into mmall_user (id, username, password, 
      email, phone, question, 
      answer, role, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, now(),
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.emarket.bean.User">
    insert into mmall_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="question != null">
        question,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="updateTime != null">
        now(),
      </if>
    </trim>
  </insert>
  <select id="checkUsername" resultType="int" parameterType="string">
    SELECT count(1) FROM mmall_user WHERE username = #{username, jdbcType=VARCHAR}
  </select>

  <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
    SELECT
      <include refid="Base_Colunm_List"/>
    FROM mmall_user usernme = #{username, jdbcType=VARCHAR} AND password = #{password, jdbcType=VARCHAR}
  </select>
  <select id="checkEmail" resultType="int" parameterType="string">
    SELECT count(1) FROM mmall_user WHERE email = #{email, jdbcType=VARCHAR}
  </select>
  <select id="selectQuestionByUsername" resultType="string" parameterType="string">
    SELECT question FROM mmall_user WHERE username = #{username, jdbcType=VARCHAR}
  </select>
  <select id="checkAnswer" resultType="int" parameterType="map">
    SELECT
      count(1)
    FROM mmall_user
    WHERE username = #{username, jdbcType=VARCHAR}
    AND question = #{question, jdbcType=VARCHAR}
    AND answer = #{answer, jdbcType=VARCHAR}
  </select>
  
  <update id="updatePasswordByUsername" parameterType="map">
    UPDATE mmall_user
    SET password = #{passwordNew, jdbcType=VARCHAR}, update_time = now()
    WHERE username = #{username, jdbcType=VARCHAR}
  </update>

  <select id="checkPassword" parameterType="map">
    SELECT COUNT(1)
    FROM mmall_user
    WHERE password = #{oldPassword, jdbcType=VARCHAR}
    AND id = #{userId, jdbcType=INTEGER}
  </select>

  <update id="updatePasswordByUserId" parameterType="map">
    UPDATE mmall_user
        SET password = #{newPassword, jdbcType=VARCHAR}
    WHERE id = #{userId, jdbcType=INTEGER}
  </update>

  <select id="checkEmailByUserId" parameterType="map">
    SELECT COUNT(1)
    FROM mmall_user
    WHERE email = #{email, jdbcType=VARCHAR}
    AND id != #{userId, jdbcType=INTEGER}
  </select>

  <update id="updateByPrimaryKey" parameterType="com.emarket.bean.User">
    UPDATE mmall_user
    <trim prefix="SET" suffixOverrides=",">
      <if test="email != null">
        email = #{email, jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password, jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone, jdbcType=VARCHAR},
      </if>
      <if test="question != null">
        question = #{question, jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer, jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = now(),
      </if>
      <if test="updateTime != null">
        update_time = now(),
      </if>
    </trim>
    WHERE id = #{id, jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="int">

  </select>
</mapper>